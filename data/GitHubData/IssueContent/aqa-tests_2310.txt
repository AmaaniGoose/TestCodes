**Describe the bug**
For some unknown reason, 3 days ago we stopped running jdk_utils with +UseCompressedOops and started running it with -UseCompressedOops.

When we run jdk_util on jdk8 hotspot with -UseCompressedOops, TimSortStackSize2.java fails with this:

```
[2021-02-24T18:49:13.217Z] java.lang.OutOfMemoryError: Java heap space
[2021-02-24T18:49:13.217Z] 	at TimSortStackSize2.createArray(TimSortStackSize2.java:164)
[2021-02-24T18:49:13.218Z] 	at TimSortStackSize2.doTest(TimSortStackSize2.java:59)
[2021-02-24T18:49:13.218Z] 	at TimSortStackSize2.main(TimSortStackSize2.java:43)
[2021-02-24T18:49:13.218Z] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[2021-02-24T18:49:13.218Z] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[2021-02-24T18:49:13.218Z] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[2021-02-24T18:49:13.218Z] 	at java.lang.reflect.Method.invoke(Method.java:498)
[2021-02-24T18:49:13.218Z] 	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)
[2021-02-24T18:49:13.218Z] 	at java.lang.Thread.run(Thread.java:748)
```
This occurs on most platforms, including:
Mac: https://trss.adoptopenjdk.net/output/test?id=6036cf3a5730424dbc8f9ccf
Windows: https://trss.adoptopenjdk.net/output/test?id=6036b0105730424dbc8f81d8
and xLinux: https://trss.adoptopenjdk.net/output/test?id=6036bc195730424dbc8f8d1e

**To Reproduce**
https://ci.adoptopenjdk.net/job/Grinder/parambuild/?TARGET=jdk_util&SDK_RESOURCE=upstream&TEST_FLAG=&UPSTREAM_TEST_JOB_NAME=&DOCKER_REQUIRED=false&ACTIVE_NODE_TIMEOUT=0&EXTRA_DOCKER_ARGS=&VENDOR_TEST_DIRS=&TKG_OWNER_BRANCH=AdoptOpenJDK%3Amaster&PLATFORM=x86-64_linux&KEEP_REPORTDIR=true&PERSONAL_BUILD=false&ADOPTOPENJDK_REPO=https%3A%2F%2Fgithub.com%2FAdoptOpenJDK%2Fopenjdk-tests.git&LABEL=&EXTRA_OPTIONS=&CUSTOMIZED_SDK_URL=&BUILD_IDENTIFIER=&ADOPTOPENJDK_BRANCH=master&ARTIFACTORY_SERVER=&KEEP_WORKSPACE=false&JDK_VERSION=8&USER_CREDENTIALS_ID=&ITERATIONS=1&VENDOR_TEST_REPOS=&JDK_REPO=https%3A%2F%2Fgithub.com%2Fadoptopenjdk%2Fopenjdk-jdk8u&RELEASE_TAG=&OPENJ9_BRANCH=master&OPENJ9_SHA=&JCK_GIT_REPO=&VENDOR_TEST_BRANCHES=&UPSTREAM_JOB_NAME=build-scripts%2Fjobs%2Fjdk8u%2Fjdk8u-linux-x64-hotspot&OPENJ9_REPO=https%3A%2F%2Fgithub.com%2Feclipse%2Fopenj9.git&CUSTOM_TARGET=&VENDOR_TEST_SHAS=&JDK_BRANCH=dev&LABEL_ADDITION=&ARTIFACTORY_REPO=&ARTIFACTORY_ROOT_DIR=&UPSTREAM_TEST_JOB_NUMBER=&DOCKERIMAGE_TAG=&JDK_IMPL=hotspot&SSH_AGENT_CREDENTIAL=&AUTO_DETECT=true&TKG_SHA=&CUSTOMIZED_SDK_URL_CREDENTIAL_ID=&NUM_MACHINES=&OPENJDK_SHA=&BUILD_LIST=openjdk&UPSTREAM_JOB_NUMBER=923&TIME_LIMIT=10&JVM_OPTIONS=&PARALLEL=None

**Expected behavior**
Unknown. I don't know why we weren't running this test with compressedrefs disabled on Hotspot before, and I don't know what change has resulted in us not running the compressed refs enabled version of the test anymore.

**Additional context**

The plan: 
- [x] Verify whether the test fails on later versions of the jdk.
- [x] Create a table that shows results for different JDK versions, compressedrefs enablement, and platforms.
- [x] See if the test fails if a jdk8 build is used to run a later version of the test. Visa versa.
