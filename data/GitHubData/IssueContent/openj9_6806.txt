There are two implementations of `TR_PersistentCHTable::findClassInfoAfterLocking()` calls, one which is based on a compilation object and another that takes a `TR_FrontEnd`. The `TR_FrontEnd` version doesn't check anything related to AOT and ignores its `returnClassInfoForAOT` parameter. That means a `classInfo` will be returned in AOT compilations if there is one even if that parameter is set to `false`.

There seem to be still calls to this version of `findClassInfoAfterLocking()` that pass `returnClassInfoForAOT=false` (I saw one in `optimizer/StringPeepholes.cpp` but there may be more). I think someone should vet the callers to this function are all doing what we expect.